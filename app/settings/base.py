# coding: utf-8
"""
Django settings for hello_django project.

Generated by 'django-admin startproject' using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&bm5($b)56n=5y(ss&6v!!=$7h$us$2eqh!185s3188w6k0%vq'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

#
# Application definition
#
# Djangoプロジェクトを配置したベースディレクトリをBASE_DIRに設定
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

ROOT_URLCONF = 'app.urls'
WSGI_APPLICATION = 'app.wsgi.application'

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',     # 追加
    'site01.apps.Site01Config', # 追加
    'polls.apps.PollsConfig',   # 追加
 ]
SITE_ID = 1 # 追加

# Add apps/ to the Python path
#sys.path.append(os.path.join("", "apps"))

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',   # 多言語対応
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'app.middleware.logging.LoggingMiddleware', # 追加
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 修正 DIRSを設定しておくと、ベースディレクトリ直下の「template」を最初の検索候補と指定することができる
        #'DIRS': [],
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/
LANGUAGE_CODE = 'ja'
TIME_ZONE = 'Asia/Tokyo'
USE_I18N = True
USE_L10N = True
USE_TZ = True

#: 多言語対応
LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

# #: 言語一覧
# LANG_CHOICES = (
#     ('en', 'English'),
#     ('ja', 'Japanese'),
# )
#: プルダウンの言語が多すぎる場合は、絞り込む
# from django.utils.translation import ugettext_lazy as _
# LANGUAGES = [
#     ('en', _('English')),
#     ('ja', _('Japanese')),
# ]
#! locale出力先
LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale'),
)

#: セッション
#: どのデータベース設定を使うかを設定する
SESSION_CACHE_ALIAS	= 'default'
#: cookieの有効期間
SESSION_COOKIE_AGE = 1209600 # (2週間)
#: cookieをどのスコープで設定するか
SESSION_COOKIE_DOMAIN = None # (2週間)
#: cookieにHTTPONLY属性を付与するか否か
SESSION_COOKIE_HTTPONLY = True # (付与する)
#: cookieのパス
SESSION_COOKIE_PATH = '/'
#: cookieの名称
SESSION_COOKIE_NAME = 'sessionid'
#: cookieのsecure属性値
SESSION_COOKIE_SECURE = False
#: どこにセッションデータを登録するかを制御する
SESSION_ENGINE = 'django.contrib.sessions.backends.db'
#: cookieのsession属性値
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
#: ファイルにセッションを登録する場合のファイルパスを指定する
SESSION_FILE_PATH = None
#: セッションデータをリクエスト毎に保存するか否か
SESSION_SAVE_EVERY_REQUEST = False
# #: Session情報をシリアライズする際の、シリアライザーの指定
# SESSION_SERIALIZER = 'djang'

#: ログ
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'formatters': {
        'django.server': {
            '()': 'django.utils.log.ServerFormatter',
            'format': '[%(server_time)s] %(message)s a',
        },
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s '
                      '%(process)d %(thread)d %(message)s'
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'django.server': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'django.server',
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'mail_admins'],
            'level': 'INFO',
        },
        'django.server': {
            'handlers': ['django.server'],
            'level': 'INFO',
            'propagate': False,
        },
        #追加
        'site01': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
        #追加
        'polls': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    }
}

